FORMAT: 1A

# Matthiola

The API doc of [Matthiola](https://github.com/project-matthiola), a distributed commodities OTC electronic trading system.

## Authentication

JSON Web Token

# Group Private

All actions in group **Private** except `POST /auth` require the `token`.

## Authentication [/auth]

### Sign a Contract [POST]

Sign a contract with the broker.

+ Request (application/json)

    + Attributes (object)
        
        + firm_name: Matthiola (string)
    
    + Headers
            
            Accept: application/json
    
    + Body

            {
                "firm_name": "Matthiola"
            }

+ Response 201 (application/json)

    + Attributes (object)
    
        + data (object)
            + firm_id: 1 (number)
            + firm_name: Matthiola (string)
            + credit: 100 (number)
            + token (string)
    
    + Body
    
            { 
                "data": {
                    "firm_id": 1,
                    "firm_name": "Matthiola",
                    "credit": 100,
                    "token": "QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
                }
            }

+ Response 409 (application/json)

        {
            "error": {
                "status": 409,
                "title": "Conflict",
                "message": "Invalid firm name."
            }
        }

### Validate [GET]

Validate the token generated by the broker.

+ Request

    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    + Attributes (object)
    
        + data (object)
            + firm_id: 1 (number)
            + firm_name: Matthiola (string)
            + credit: 100 (number)
            + token (string)
    
    + Body
    
            { 
                "data": {
                    "firm_id": 1,
                    "firm_name": "Matthiola",
                    "credit": 100,
                    "token": "QWxhZGRpbjpvcGVuIHNlc2FtZQ=="
                }
            }

+ Response 401 (application/json)

        {
            "error": {
                "status": 401,
                "title": "Unauthorized",
                "message": "Invalid token."
            }
        }

## Order Collection [/orders{?status,futures_id}]

+ Attributes (array[Order])

+ Parameters

    + status (string, optional) - open | canceled | done | all
        + default: all
    + futures_id (string, optional)
        + default: null

### List Orders [GET]

List your current open orders.

+ Request

    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    + Attributes (object)
    
        + data (Order Collection)

    + Body
    
            { 
                "data": [{
                    "order_id": "D4CA73A0-FE34-4B09-991F-E889813B1C15",
                    "order_type": "limit",
                    "side": "buy",
                    "futures_id": "GC_SEP18",
                    "trader_name": "John",
                    "quantity": 50,
                    "open_quantity": 40,
                    "price": 30.12,
                    "status": "open",
                    "created_at": "2018-05-17T12:00:00Z",
                    "updated_at": "2012-05-17T13:00:00Z"
                }]
            }

+ Response 401 (application/json)

        {
            "error": {
                "status": 401,
                "title": "Unauthorized",
                "message": "Invalid token."
            }
        }

+ Response 404 (application/json)

        {
            "error": {
                "status": 404,
                "title": "Not Found",
                "message": "Invalid futures id."
            }
        }

## Order [/orders/{order_id}]

+ Attributes (object)
    + order_id (string, required)
    + order_type: market | limit | stop (string, required)
    + side: buy | sell (string, required)
    + futures_id (string, required)
    + trader_name: John (string, required)
    + quantity: 50 (number, required)
    + open_quantity: 40 (number, required)
    + price: 30.12 (number, optional)
    + status: open | canceled | done (string, required)
    + created_at (string, required)
    + updated_at (string, optional)

+ Parameters

    + order_id (UUID) - The UUID of the order.

### Get an Order [GET]

Get a single order by order id.

+ Request

    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)
    
    + Attributes (object)
    
        + data (Order)
    
    + Body
    
            { 
                "data": {
                    "order_id": "D4CA73A0-FE34-4B09-991F-E889813B1C15",
                    "order_type": "limit",
                    "side": "buy",
                    "futures_id": "GC_SEP18",
                    "trader_name": "John",
                    "quantity": 50,
                    "open_quantity": 40,
                    "price": 30.12,
                    "status": "open",
                    "created_at": "2018-05-17T12:00:00Z",
                    "updated_at": "2012-05-17T13:00:00Z"
                }
            }

+ Response 401 (application/json)

        {
            "error": {
                "status": 401,
                "title": "Unauthorized",
                "message": "Invalid token."
            }
        }

+ Response 404 (application/json)

        {
            "error": {
                "status": 404,
                "title": "Not Found",
                "message": "Invalid order id."
            }
        }

### Cancel an Order [DELETE]

Cancel a single order by order id.

+ Request

    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 204

+ Response 401 (application/json)

        {
            "error": {
                "status": 401,
                "title": "Unauthorized",
                "message": "Invalid token."
            }
        }

+ Response 404 (application/json)

        {
            "error": {
                "status": 404,
                "title": "Not Found",
                "message": "Invalid order id."
            }
        }

## Trades [/trades{?self_only,futures_id}]

+ Attributes (object)
    + trade_id (string)
    + quantity: 50 (number)
    + price: 30.12 (number)
    + futures_id (string)
    + initiator (object)
        + firm (string)
        + side (string)
        + trader (string)
    + completion (object)
        + firm (string)
        + side (string)
        + trader (string)
    + trade_time (string)

+ Parameters

    + self_only (boolean, optional) 
        + default: false
    + futures_id (string, optional)
        + default: null

### Get Trades [GET]

List the latest trades for futures.

+ Request

    + Headers
    
            Authorization: Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==

+ Response 200 (application/json)

    + Attributes (object)
        
        + data (array[Trades])
    
    + Body
    
            { 
                "data": [{
                    "trade_id": "E271129A-D050-4D05-AFEA-5FB630CDF895",
                    "quantity": 50,
                    "price": 30.12,
                    "futures_id": "GC_SEP18",
                    "initiator": {
                        "firm": "A",
                        "side": "buy",
                        "trader": "John"
                    },
                    "completion": {
                        "firm": "B",
                        "side": "sell",
                        "trader": "Doe"
                    },
                    "trade_time": "2012-01-01T12:00:00Z"
                }]
            }

+ Response 404 (application/json)

        {
            "error": {
                "status": 404,
                "title": "Not Found",
                "message": "Invalid futures id."
            }
        }

# Group Market Data

## Futures [/futures]

+ Attributes (object)
    + futures_id (string, required)
    + futures_name: Gold (string)
    + symbol: GC (string)
    + period: MAY18 (string)


### Get Futures [GET]

Get a list of available futures for trading.

+ Response 200 (application/json)

    + Attributes (object)
    
        + data (array[Futures])
            
    + Body
    
            {
                "data": [
                    {
                        "futures_id": "GC_MAY18",
                        "futures_name": "Gold",
                        "symbol": "GC",
                        "period": "MAY18"
                    }
                ]
            }

## Order Book [/futures/{futures_id}/book{?level}]

+ Attributes (array)

    + 295.86 (number) - Price
    + 10.34 (number) - Quantity

+ Parameters

    + futures_id (string) - The id of the futures.
    + level (number, optional) - The level of the order book.
        + default: 5

### Get Order Book [GET]

Get a list of open orders for futures.

+ Response 200 (application/json)

    + Attributes (object)
    
        + data (object)
            + bids (array[Order Book])
            + asks (array[Order Book])
            + level: 5 (number)

    + Body

            {
                "data": {
                    "bids": [
                        [ 295.96, 10.34 ],
                        [ 295.95, 5.67 ],
                        [ 295.93, 3.46 ],
                        [ 295.92, 4.62 ],
                        [ 295.90, 5.17 ]
                    ],
                    "asks": [
                        [ 295.89, 2.41 ],
                        [ 295.88, 3.45 ],
                        [ 295.87, 1.56 ],
                        [ 295.86, 7.23 ],
                        [ 295.85, 3.41 ]
                    ],
                    "level": 5
                }
            }

+ Response 404 (application/json)

        {
            "error": {
                "status": 404,
                "title": "Not Found",
                "message": "Invalid futures id."
            }
        }

# Group Administrator